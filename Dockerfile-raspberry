##
# 1) Base 스테이지: 기본 의존성 설치
#    (개발/빌드용 의존성까지 포함)
##
FROM node:23.9.0-slim AS base

# 작업 디렉터리 설정
WORKDIR /usr/src/app

# pnpm 전역 설치
RUN npm install -g pnpm

# package.json, lock 파일 복사
COPY package.json .
COPY pnpm-lock.yaml .

# 모든 의존성(개발용 포함) 설치
RUN pnpm install

# (prisma, src 등은 build 스테이지에서 복사할 것이므로 여기서는 제외)


##
# 2) Build 스테이지: 프로젝트 빌드
##
FROM base AS build

WORKDIR /usr/src/app

# base 스테이지에서 설치된 node_modules 복사해오기
# (이미 base에서 /usr/src/app/node_modules가 있음)
# 굳이 다시 복사할 필요 없이, 같은 경로를 계속 사용하면 됩니다.
# COPY --from=base /usr/src/app/node_modules ./node_modules

# 소스/설정 파일 복사
COPY src ./src
COPY prisma ./prisma
COPY tsconfig.json tsconfig.json

# Prisma 등 스키마 관련 작업
RUN pnpm run schema

# 빌드 (TS -> JS 등)
RUN pnpm run build



##
# 3) Release 스테이지: 프로덕션 배포
##
FROM node:23.9.0-slim AS release

WORKDIR /home/node

# 프로덕션 환경에 pnpm 설치 (런타임 실행용)
RUN npm install -g pnpm

# 배포용 package.json 복사
COPY package-deploy.json ./package.json

# 빌드 결과물, 필요한 폴더만 복사
COPY --from=build /usr/src/app/prisma ./prisma
COPY --from=build /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/dist ./src
# tsconfig.json이 런타임에 꼭 필요한 경우에만 복사
COPY tsconfig.json tsconfig.json

# 환경변수 설정
ENV NODE_ENV=production

# 포트(필요 시)
# EXPOSE 3000

# 실행 커맨드 (pnpm start 스크립트가 package-deploy.json에 정의되어 있어야 함)
ENTRYPOINT ["pnpm", "start"]